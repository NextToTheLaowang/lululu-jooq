/*
 * This file is generated by jOOQ.
 */
package com.gen.tables;


import com.gen.Indexes;
import com.gen.Keys;
import com.gen.Lw;
import com.gen.tables.records.LwMemberCardRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LwMemberCard extends TableImpl<LwMemberCardRecord> {

    private static final long serialVersionUID = 1413807299;

    /**
     * The reference instance of <code>LW.lw_member_card</code>
     */
    public static final LwMemberCard LW_MEMBER_CARD = new LwMemberCard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LwMemberCardRecord> getRecordType() {
        return LwMemberCardRecord.class;
    }

    /**
     * The column <code>LW.lw_member_card.id</code>.
     */
    public final TableField<LwMemberCardRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>LW.lw_member_card.create_date</code>. 创建时间
     */
    public final TableField<LwMemberCardRecord, LocalDateTime> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "创建时间");

    /**
     * The column <code>LW.lw_member_card.update_date</code>. 更新时间
     */
    public final TableField<LwMemberCardRecord, LocalDateTime> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "更新时间");

    /**
     * The column <code>LW.lw_member_card.remarks</code>. 备注信息
     */
    public final TableField<LwMemberCardRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(255), this, "备注信息");

    /**
     * The column <code>LW.lw_member_card.del_flag</code>. 逻辑删除标记（0：显示；1：隐藏）
     */
    public final TableField<LwMemberCardRecord, UInteger> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "逻辑删除标记（0：显示；1：隐藏）");

    /**
     * The column <code>LW.lw_member_card.shop_id</code>.
     */
    public final TableField<LwMemberCardRecord, Long> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>LW.lw_member_card.member_id</code>. 会员id
     */
    public final TableField<LwMemberCardRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT, this, "会员id");

    /**
     * The column <code>LW.lw_member_card.card_no</code>. 会员卡号
     */
    public final TableField<LwMemberCardRecord, String> CARD_NO = createField("card_no", org.jooq.impl.SQLDataType.VARCHAR(64), this, "会员卡号");

    /**
     * The column <code>LW.lw_member_card.money</code>. 余额
     */
    public final TableField<LwMemberCardRecord, BigDecimal> MONEY = createField("money", org.jooq.impl.SQLDataType.DECIMAL(20, 4), this, "余额");

    /**
     * The column <code>LW.lw_member_card.integral</code>. 积分
     */
    public final TableField<LwMemberCardRecord, Integer> INTEGRAL = createField("integral", org.jooq.impl.SQLDataType.INTEGER, this, "积分");

    /**
     * The column <code>LW.lw_member_card.state</code>. 状态  预留字段
     */
    public final TableField<LwMemberCardRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT, this, "状态  预留字段");

    /**
     * Create a <code>LW.lw_member_card</code> table reference
     */
    public LwMemberCard() {
        this(DSL.name("lw_member_card"), null);
    }

    /**
     * Create an aliased <code>LW.lw_member_card</code> table reference
     */
    public LwMemberCard(String alias) {
        this(DSL.name(alias), LW_MEMBER_CARD);
    }

    /**
     * Create an aliased <code>LW.lw_member_card</code> table reference
     */
    public LwMemberCard(Name alias) {
        this(alias, LW_MEMBER_CARD);
    }

    private LwMemberCard(Name alias, Table<LwMemberCardRecord> aliased) {
        this(alias, aliased, null);
    }

    private LwMemberCard(Name alias, Table<LwMemberCardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LwMemberCard(Table<O> child, ForeignKey<O, LwMemberCardRecord> key) {
        super(child, key, LW_MEMBER_CARD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lw.LW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LW_MEMBER_CARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LwMemberCardRecord> getPrimaryKey() {
        return Keys.KEY_LW_MEMBER_CARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LwMemberCardRecord>> getKeys() {
        return Arrays.<UniqueKey<LwMemberCardRecord>>asList(Keys.KEY_LW_MEMBER_CARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LwMemberCard as(String alias) {
        return new LwMemberCard(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LwMemberCard as(Name alias) {
        return new LwMemberCard(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LwMemberCard rename(String name) {
        return new LwMemberCard(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LwMemberCard rename(Name name) {
        return new LwMemberCard(name, null);
    }
}
