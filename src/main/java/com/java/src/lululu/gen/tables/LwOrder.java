/*
 * This file is generated by jOOQ.
 */
package com.java.src.lululu.gen.tables;


import com.java.src.lululu.gen.Indexes;
import com.java.src.lululu.gen.Keys;
import com.java.src.lululu.gen.Lw;
import com.java.src.lululu.gen.tables.records.LwOrderRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LwOrder extends TableImpl<LwOrderRecord> {

    private static final long serialVersionUID = 200713415;

    /**
     * The reference instance of <code>LW.lw_order</code>
     */
    public static final LwOrder LW_ORDER = new LwOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LwOrderRecord> getRecordType() {
        return LwOrderRecord.class;
    }

    /**
     * The column <code>LW.lw_order.id</code>.
     */
    public final TableField<LwOrderRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>LW.lw_order.create_date</code>. 创建时间
     */
    public final TableField<LwOrderRecord, LocalDateTime> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "创建时间");

    /**
     * The column <code>LW.lw_order.update_date</code>. 更新时间
     */
    public final TableField<LwOrderRecord, LocalDateTime> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "更新时间");

    /**
     * The column <code>LW.lw_order.remarks</code>. 备注信息
     */
    public final TableField<LwOrderRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(255), this, "备注信息");

    /**
     * The column <code>LW.lw_order.del_flag</code>. 逻辑删除标记（0：显示；1：隐藏）
     */
    public final TableField<LwOrderRecord, UInteger> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "逻辑删除标记（0：显示；1：隐藏）");

    /**
     * The column <code>LW.lw_order.order_no</code>. 订单号
     */
    public final TableField<LwOrderRecord, String> ORDER_NO = createField("order_no", org.jooq.impl.SQLDataType.VARCHAR(50), this, "订单号");

    /**
     * The column <code>LW.lw_order.order_money</code>. 订单金额
     */
    public final TableField<LwOrderRecord, BigDecimal> ORDER_MONEY = createField("order_money", org.jooq.impl.SQLDataType.DECIMAL(20, 6), this, "订单金额");

    /**
     * The column <code>LW.lw_order.pay_money</code>. 实际支付金额
     */
    public final TableField<LwOrderRecord, BigDecimal> PAY_MONEY = createField("pay_money", org.jooq.impl.SQLDataType.DECIMAL(20, 6), this, "实际支付金额");

    /**
     * The column <code>LW.lw_order.pay_way</code>. 支付方式  现金  支付宝  微信。。。
     */
    public final TableField<LwOrderRecord, Integer> PAY_WAY = createField("pay_way", org.jooq.impl.SQLDataType.INTEGER, this, "支付方式  现金  支付宝  微信。。。");

    /**
     * The column <code>LW.lw_order.pay_type</code>. 支付类型   线上  线下
     */
    public final TableField<LwOrderRecord, Integer> PAY_TYPE = createField("pay_type", org.jooq.impl.SQLDataType.INTEGER, this, "支付类型   线上  线下");

    /**
     * The column <code>LW.lw_order.pay_time</code>. 支付时间
     */
    public final TableField<LwOrderRecord, LocalDateTime> PAY_TIME = createField("pay_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "支付时间");

    /**
     * The column <code>LW.lw_order.order_status</code>. 订单状态
     */
    public final TableField<LwOrderRecord, Integer> ORDER_STATUS = createField("order_status", org.jooq.impl.SQLDataType.INTEGER, this, "订单状态");

    /**
     * The column <code>LW.lw_order.pay_status</code>. 支付状态
     */
    public final TableField<LwOrderRecord, Integer> PAY_STATUS = createField("pay_status", org.jooq.impl.SQLDataType.INTEGER, this, "支付状态");

    /**
     * The column <code>LW.lw_order.account_id</code>.
     */
    public final TableField<LwOrderRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>LW.lw_order.member_id</code>. 用户id
     */
    public final TableField<LwOrderRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT, this, "用户id");

    /**
     * The column <code>LW.lw_order.order_type</code>. 订单类型  消费  充值
     */
    public final TableField<LwOrderRecord, Integer> ORDER_TYPE = createField("order_type", org.jooq.impl.SQLDataType.INTEGER, this, "订单类型  消费  充值");

    /**
     * The column <code>LW.lw_order.shop_id</code>.
     */
    public final TableField<LwOrderRecord, Long> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>LW.lw_order.goods_id</code>. 商品id
     */
    public final TableField<LwOrderRecord, Long> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.BIGINT, this, "商品id");

    /**
     * The column <code>LW.lw_order.integral</code>. 返用积分
     */
    public final TableField<LwOrderRecord, Integer> INTEGRAL = createField("integral", org.jooq.impl.SQLDataType.INTEGER, this, "返用积分");

    /**
     * The column <code>LW.lw_order.goods_count</code>.
     */
    public final TableField<LwOrderRecord, Integer> GOODS_COUNT = createField("goods_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>LW.lw_order.goods_name</code>.
     */
    public final TableField<LwOrderRecord, String> GOODS_NAME = createField("goods_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>LW.lw_order.goods_price</code>.
     */
    public final TableField<LwOrderRecord, BigDecimal> GOODS_PRICE = createField("goods_price", org.jooq.impl.SQLDataType.DECIMAL(20, 6), this, "");

    /**
     * Create a <code>LW.lw_order</code> table reference
     */
    public LwOrder() {
        this(DSL.name("lw_order"), null);
    }

    /**
     * Create an aliased <code>LW.lw_order</code> table reference
     */
    public LwOrder(String alias) {
        this(DSL.name(alias), LW_ORDER);
    }

    /**
     * Create an aliased <code>LW.lw_order</code> table reference
     */
    public LwOrder(Name alias) {
        this(alias, LW_ORDER);
    }

    private LwOrder(Name alias, Table<LwOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private LwOrder(Name alias, Table<LwOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LwOrder(Table<O> child, ForeignKey<O, LwOrderRecord> key) {
        super(child, key, LW_ORDER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lw.LW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LW_ORDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LwOrderRecord, Long> getIdentity() {
        return Keys.IDENTITY_LW_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LwOrderRecord> getPrimaryKey() {
        return Keys.KEY_LW_ORDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LwOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<LwOrderRecord>>asList(Keys.KEY_LW_ORDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LwOrder as(String alias) {
        return new LwOrder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LwOrder as(Name alias) {
        return new LwOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LwOrder rename(String name) {
        return new LwOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LwOrder rename(Name name) {
        return new LwOrder(name, null);
    }
}
