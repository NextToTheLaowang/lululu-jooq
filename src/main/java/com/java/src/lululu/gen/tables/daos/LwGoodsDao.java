/*
 * This file is generated by jOOQ.
 */
package com.java.src.lululu.gen.tables.daos;


import com.java.src.lululu.gen.tables.LwGoods;
import com.java.src.lululu.gen.tables.records.LwGoodsRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class LwGoodsDao extends DAOImpl<LwGoodsRecord, com.java.src.lululu.gen.tables.pojos.LwGoods, Long> {

    /**
     * Create a new LwGoodsDao without any configuration
     */
    public LwGoodsDao() {
        super(LwGoods.LW_GOODS, com.java.src.lululu.gen.tables.pojos.LwGoods.class);
    }

    /**
     * Create a new LwGoodsDao with an attached configuration
     */
    @Autowired
    public LwGoodsDao(Configuration configuration) {
        super(LwGoods.LW_GOODS, com.java.src.lululu.gen.tables.pojos.LwGoods.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.java.src.lululu.gen.tables.pojos.LwGoods object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.java.src.lululu.gen.tables.pojos.LwGoods> fetchById(Long... values) {
        return fetch(LwGoods.LW_GOODS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.java.src.lululu.gen.tables.pojos.LwGoods fetchOneById(Long value) {
        return fetchOne(LwGoods.LW_GOODS.ID, value);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<com.java.src.lululu.gen.tables.pojos.LwGoods> fetchByCreateDate(LocalDateTime... values) {
        return fetch(LwGoods.LW_GOODS.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>update_date IN (values)</code>
     */
    public List<com.java.src.lululu.gen.tables.pojos.LwGoods> fetchByUpdateDate(LocalDateTime... values) {
        return fetch(LwGoods.LW_GOODS.UPDATE_DATE, values);
    }

    /**
     * Fetch records that have <code>remarks IN (values)</code>
     */
    public List<com.java.src.lululu.gen.tables.pojos.LwGoods> fetchByRemarks(String... values) {
        return fetch(LwGoods.LW_GOODS.REMARKS, values);
    }

    /**
     * Fetch records that have <code>del_flag IN (values)</code>
     */
    public List<com.java.src.lululu.gen.tables.pojos.LwGoods> fetchByDelFlag(UInteger... values) {
        return fetch(LwGoods.LW_GOODS.DEL_FLAG, values);
    }

    /**
     * Fetch records that have <code>shop_id IN (values)</code>
     */
    public List<com.java.src.lululu.gen.tables.pojos.LwGoods> fetchByShopId(Long... values) {
        return fetch(LwGoods.LW_GOODS.SHOP_ID, values);
    }

    /**
     * Fetch records that have <code>goods_name IN (values)</code>
     */
    public List<com.java.src.lululu.gen.tables.pojos.LwGoods> fetchByGoodsName(String... values) {
        return fetch(LwGoods.LW_GOODS.GOODS_NAME, values);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<com.java.src.lululu.gen.tables.pojos.LwGoods> fetchByPrice(BigDecimal... values) {
        return fetch(LwGoods.LW_GOODS.PRICE, values);
    }

    /**
     * Fetch records that have <code>integral IN (values)</code>
     */
    public List<com.java.src.lululu.gen.tables.pojos.LwGoods> fetchByIntegral(Integer... values) {
        return fetch(LwGoods.LW_GOODS.INTEGRAL, values);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<com.java.src.lululu.gen.tables.pojos.LwGoods> fetchByState(Integer... values) {
        return fetch(LwGoods.LW_GOODS.STATE, values);
    }
}
